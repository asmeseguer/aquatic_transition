################################################################################
#
# RevBayes Example: Bayesian inference of diversification rates under a
#                   constant-rate pure-birth model
#
#
# authors: Sebastian Hoehna and Tracy A. Heath
#
################################################################################

#######################
# Reading in the Data #
#######################

###### This just defines a single model for all sites #######

### Read in sequence data for both genes

T <- readTrees("data/GBOTB-genuslevel-ult-cut-angiosp-terrestrial.tre")[1]

# Get some useful variables from the data. We need these later on.
taxa <- T.taxa()

# set my move index
mvi = 1
mni = 1


######################
# birth  model  #
######################

### the diversification rate is a stochastic random variable drawn from a lognormal prior
### MCMC samples this variable using a scale proposal
diversification_mean <- ln( ln(12840.0/2.0) / T.rootAge() )
diversification_sd <- 0.587405
diversification ~ dnLognormal(mean=diversification_mean,sd=diversification_sd)
moves[mvi++] = mvScale(diversification,lambda=1.0,tune=true,weight=3.0)

#### The turnover = extinction rate is a stochastic random variable drawn from a lognormal prior
turnover_mean <- ln( ln(12840.0/2.0) / T.rootAge() )
turnover_sd <- 0.587405*2
turnover ~ dnLognormal(mean=turnover_mean,sd=turnover_sd)
moves[mvi++] = mvScale(turnover,lambda=1.0,tune=true,weight=3.0)

####  We now specify the birth_rate by a deterministic transformation

birth_rate := diversification + turnover
death_rate := turnover

### rho is the probability of sampling species at the present
### there are ~12840 described species of terrestrial angiosperm genera
rho <- T.ntips()/12840

### the BDP is conditioned on the root time, we can get this value from our tree and set a constant node
root_time <- T.rootAge()

### the time tree is a stochastic node modeled by the constant rate birth-death process (dnBDP)
### by setting mu to the constant value 0.0, we are specifying a pure-birth process
timetree ~ dnBDP(lambda=birth_rate, mu=death_rate, rho=rho, rootAge=root_time, samplingStrategy="uniform", condition="survival", taxa=taxa)

### clamp the model with the "observed" tree
timetree.clamp(T)



#############
# The Model #
#############


### workspace model wrapper ###
mymodel = model(diversification)

### set up the monitors that will output parameter values to file and screen
monitors[mni++] = mnModel(filename="output/BD-terrestrial/terrestrial_BD.log",printgen=10, separator = TAB)
monitors[mni++] = mnScreen(printgen=1000, birth_rate)



################
# The Analysis #
################

### workspace mcmc ###
mymcmc = mcmc(mymodel, monitors, moves)

### pre-burnin to tune the proposals ###
mymcmc.burnin(generations=10000,tuningInterval=200)

### run the MCMC ###
mymcmc.run(generations=50000)

######### Model Comparisons ############################################################
# Calculate marginal likelihood using Bayes Factors and path sampling and stepping-stone

pow_p = powerPosterior(mymodel, moves, monitors, "outputPP/BD_terrestrial.out", cats=50)

pow_p.burnin(generations=1000, tuningInterval=100)  # No need if we run this immediately after mymcmc.run

pow_p.run(generations=1000)


ss = steppingStoneSampler(file="outputPP/BD_terrestrial.out", powerColumnName="power", likelihoodColumnName="likelihood")
ps = pathSampler(file="outputPP/BD_terrestrial.out", powerColumnName="power", likelihoodColumnName="likelihood")

ss.marginal()
ps.marginal()


## quit ##
q()